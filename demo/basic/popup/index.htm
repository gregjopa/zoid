<!DOCTYPE html>

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-design/4.0.2/bootstrap-material-design.css" />
    <link rel="stylesheet" href="../../common/index.css" />

    <script src="../../../node_modules/jsx-pragmatic/dist/jsx-pragmatic.js"></script>
    <script src="../../../dist/zoid.js"></script>
    <script src="./login.js"></script>
</head>

<body>

    <h3>Log in on xyz.com</h3>

    <button id="popupLogin" class="btn btn-primary">Popup Log In</button>

    <div id="result"></div>

    <script>

function renderOverlay({ isOpen, close }) {
    let uid = 'abc10000',
        tag = 'my-login-component',
        context = 'def345',
        focus = () => {};


    function closeOverlay() {
        const el = document.getElementById(uid);
        el.parentNode.removeChild(el);
    }

    console.log('isOpen', isOpen);

    if (isOpen === false) {
        return closeOverlay();
    }

    function closeComponent(event) {
        event.preventDefault();
        event.stopPropagation();
        closeOverlay();
        return close();
    }

    function focusComponent(event) {
        event.preventDefault();
        event.stopPropagation();
        return focus();
    }



    const results = pragmatic.node('div', { id: uid, 'onClick': focusComponent, 'class': `${ tag } ${ tag }-context-${ context } ${ tag }-focus` },

        pragmatic.node('a', { 'href': '#', 'onClick': closeComponent, 'class': `${ tag }-close` }),

        pragmatic.node('style', null, `
            #${ uid } {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0, 0, 0, 0.8);
            }

            #${ uid }.${ tag }-context-${ zoid.CONTEXT.POPUP } {
                cursor: pointer;
            }

            #${ uid } .${ tag }-close {
                position: absolute;
                right: 16px;
                top: 16px;
                width: 16px;
                height: 16px;
                opacity: 0.6;
            }

            #${ uid } .${ tag }-close:hover {
                opacity: 1;
            }

            #${ uid } .${ tag }-close:before,
            #${ uid } .${ tag }-close:after {
                position: absolute;
                left: 8px;
                content: ' ';
                height: 16px;
                width: 2px;
                background-color: white;
            }

            #${ uid } .${ tag }-close:before {
                transform: rotate(45deg);
            }

            #${ uid } .${ tag }-close:after {
                transform: rotate(-45deg);
            }
        `)
    ).render(pragmatic.dom({ dom: document }));

    document.body.appendChild(results);
    }

        // To render a popup we need to wait for a click event

        document.querySelector('#popupLogin').addEventListener('click', function() {

            // Hide the button

            document.querySelector('#popupLogin').style.display = 'none';

            // Render the component

            MyLoginZoidComponent({

                prefilledEmail: 'foo@bar.com',

                // the overlay should close after this onLogin callback resolves
                onLogin: function(email) {
                    return new Promise(resolve => {
                        console.log('User logged in with email:', email);
                        document.querySelector('#result').innerText = email + ' logged in!';

                        setTimeout(() => resolve(), 10000);
                    })
                },

                renderOverlay
            }).render('body', zoid.CONTEXT.POPUP);
        });

    </script>

</body>
